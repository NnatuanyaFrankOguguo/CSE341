{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Digital Library Management API",
    "description": "A comprehensive REST API for managing a digital library system with books and authors. This API provides full CRUD operations, advanced filtering, book borrowing/returning functionality, and robust validation. Perfect for libraries, bookstores, or personal book collection management.",
    "contact": {
      "name": "API Support",
      "email": "support@library-api.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "host": "cse341-38uv.onrender.com",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Books",
      "description": "Operations related to book management"
    },
    {
      "name": "Authors",
      "description": "Operations related to author management"
    },
    {
      "name": "Library",
      "description": "Library-specific operations like borrowing and returning books"
    }
  ],
  "definitions": {
    "Book": {
      "type": "object",
      "required": ["title", "authorId", "isbn", "genre", "publishedDate", "description", "totalPages"],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier for the book",
          "example": "60f1b2b3b3b3b3b3b3b3b3b3"
        },
        "title": {
          "type": "string",
          "description": "Book title",
          "example": "The Great Gatsby"
        },
        "authorId": {
          "type": "string",
          "description": "Reference to the author's ID",
          "example": "60f1b2b3b3b3b3b3b3b3b3b4"
        },
        "isbn": {
          "type": "string",
          "description": "International Standard Book Number (10 or 13 digits)",
          "example": "9780743273565"
        },
        "genre": {
          "type": "string",
          "description": "Book genre or category",
          "example": "Classic Literature"
        },
        "publishedDate": {
          "type": "string",
          "format": "date",
          "description": "Publication date (YYYY-MM-DD)",
          "example": "1925-04-10"
        },
        "description": {
          "type": "string",
          "description": "Book description or summary",
          "example": "A classic American novel set in the Jazz Age that explores themes of wealth, love, and the American Dream."
        },
        "totalPages": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "description": "Total number of pages",
          "example": 180
        },
        "availability": {
          "type": "boolean",
          "description": "Whether the book is available for borrowing",
          "example": true
        },
        "rating": {
          "type": "number",
          "minimum": 0,
          "maximum": 5,
          "description": "Book rating (0-5)",
          "example": 4.5
        },
        "borrowedBy": {
          "type": "string",
          "description": "Name of the current borrower (null if available)",
          "example": "John Smith"
        },
        "borrowedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the book was borrowed",
          "example": "2024-09-15T10:30:00.000Z"
        },
        "returnDueDate": {
          "type": "string",
          "format": "date-time",
          "description": "Due date for returning the book",
          "example": "2024-09-29T10:30:00.000Z"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Record creation timestamp",
          "example": "2024-09-01T12:00:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Record last update timestamp",
          "example": "2024-09-01T12:00:00.000Z"
        }
      }
    },
    "Author": {
      "type": "object",
      "required": ["name", "bio", "birthDate", "nationality"],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier for the author",
          "example": "60f1b2b3b3b3b3b3b3b3b3b4"
        },
        "name": {
          "type": "string",
          "description": "Author's full name",
          "example": "F. Scott Fitzgerald"
        },
        "bio": {
          "type": "string",
          "description": "Author's biography",
          "example": "American novelist and short story writer, widely regarded as one of the greatest American writers of the 20th century."
        },
        "birthDate": {
          "type": "string",
          "format": "date",
          "description": "Author's birth date (YYYY-MM-DD)",
          "example": "1896-09-24"
        },
        "nationality": {
          "type": "string",
          "description": "Author's nationality",
          "example": "American"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Author's email address",
          "example": "f.fitzgerald@literature.com"
        },
        "website": {
          "type": "string",
          "format": "uri",
          "description": "Author's official website",
          "example": "https://www.fscottfitzgerald.com"
        },
        "socialMedia": {
          "type": "object",
          "properties": {
            "twitter": {
              "type": "string",
              "description": "Twitter handle",
              "example": "@fscottfitzgerald"
            },
            "instagram": {
              "type": "string",
              "description": "Instagram handle",
              "example": "@fscottfitzgerald"
            },
            "facebook": {
              "type": "string",
              "description": "Facebook page",
              "example": "FScottFitzgeraldOfficial"
            },
            "linkedin": {
              "type": "string",
              "description": "LinkedIn profile",
              "example": "fscottfitzgerald"
            }
          }
        },
        "awards": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of awards received",
          "example": ["Pulitzer Prize", "National Book Award"]
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether the author is currently active",
          "example": true
        },
        "bookCount": {
          "type": "integer",
          "description": "Number of books by this author in the system",
          "example": 5
        },
        "books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          },
          "description": "List of books by this author"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Record creation timestamp",
          "example": "2024-09-01T12:00:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Record last update timestamp",
          "example": "2024-09-01T12:00:00.000Z"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the request was successful",
          "example": true
        },
        "data": {
          "type": "object",
          "description": "Response data"
        },
        "message": {
          "type": "string",
          "description": "Response message",
          "example": "Operation completed successfully"
        },
        "pagination": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "example": 1
            },
            "limit": {
              "type": "integer",
              "example": 10
            },
            "total": {
              "type": "integer",
              "example": 25
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "Error type",
          "example": "Validation error"
        },
        "message": {
          "type": "string",
          "description": "Detailed error message",
          "example": "Title is required"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Error timestamp",
          "example": "2024-09-22T10:30:00.000Z"
        }
      }
    }
  },
  "paths": {
    "/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Retrieve all books with optional filtering, sorting, and pagination",
        "parameters": [
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter by genre",
            "example": "Fantasy"
          },
          {
            "name": "authorId",
            "in": "query",
            "type": "string",
            "description": "Filter by author ID",
            "example": "60f1b2b3b3b3b3b3b3b3b3b4"
          },
          {
            "name": "availability",
            "in": "query",
            "type": "boolean",
            "description": "Filter by availability",
            "example": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "description": "Sort field",
            "example": "title"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "description": "Sort order",
            "example": "asc"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "minimum": 1,
            "description": "Page number",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "description": "Items per page",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved books",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "description": "Add a new book to the library",
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "authorId", "isbn", "genre", "publishedDate", "description", "totalPages"],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Hobbit"
                },
                "authorId": {
                  "type": "string",
                  "example": "60f1b2b3b3b3b3b3b3b3b3b4"
                },
                "isbn": {
                  "type": "string",
                  "example": "9780547928227"
                },
                "genre": {
                  "type": "string",
                  "example": "Fantasy"
                },
                "publishedDate": {
                  "type": "string",
                  "example": "1937-09-21"
                },
                "description": {
                  "type": "string",
                  "example": "A fantasy novel about a hobbit's unexpected journey."
                },
                "totalPages": {
                  "type": "integer",
                  "example": 304
                },
                "rating": {
                  "type": "number",
                  "example": 4.8
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Author not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get book by ID",
        "description": "Retrieve a specific book with author details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID",
            "example": "60f1b2b3b3b3b3b3b3b3b3b3"
          }
        ],
        "responses": {
          "200": {
            "description": "Book found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Book not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update book by ID",
        "description": "Update an existing book's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          },
          {
            "name": "book",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Hobbit: Updated Edition"
                },
                "genre": {
                  "type": "string",
                  "example": "Epic Fantasy"
                },
                "rating": {
                  "type": "number",
                  "example": 4.9
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Book not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete book by ID",
        "description": "Remove a book from the library (only if not currently borrowed)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Cannot delete borrowed book",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Book not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/books/{id}/borrow": {
      "post": {
        "tags": ["Library"],
        "summary": "Borrow a book",
        "description": "Mark a book as borrowed by a specific person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          },
          {
            "name": "borrowInfo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["borrowerInfo"],
              "properties": {
                "borrowerInfo": {
                  "type": "string",
                  "example": "John Smith",
                  "description": "Name or ID of the borrower"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book borrowed successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Book not available or validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Book not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/books/{id}/return": {
      "post": {
        "tags": ["Library"],
        "summary": "Return a book",
        "description": "Mark a borrowed book as returned and available",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Book returned successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Book not currently borrowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Book not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/authors": {
      "get": {
        "tags": ["Authors"],
        "summary": "Get all authors",
        "description": "Retrieve all authors with optional filtering, sorting, and pagination",
        "parameters": [
          {
            "name": "nationality",
            "in": "query",
            "type": "string",
            "description": "Filter by nationality",
            "example": "American"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "Search by name",
            "example": "Stephen"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "description": "Sort field",
            "example": "name"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "description": "Sort order",
            "example": "asc"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "minimum": 1,
            "description": "Page number",
            "example": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "description": "Items per page",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved authors",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Authors"],
        "summary": "Create a new author",
        "description": "Add a new author to the system",
        "parameters": [
          {
            "name": "author",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "bio", "birthDate", "nationality"],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Neil Gaiman"
                },
                "bio": {
                  "type": "string",
                  "example": "English author of short fiction, novels, comic books, graphic novels, audio theatre, and films."
                },
                "birthDate": {
                  "type": "string",
                  "example": "1960-11-10"
                },
                "nationality": {
                  "type": "string",
                  "example": "British"
                },
                "email": {
                  "type": "string",
                  "example": "neil@neilgaiman.com"
                },
                "website": {
                  "type": "string",
                  "example": "https://www.neilgaiman.com"
                },
                "socialMedia": {
                  "type": "object",
                  "properties": {
                    "twitter": {
                      "type": "string",
                      "example": "@neilhimself"
                    },
                    "instagram": {
                      "type": "string",
                      "example": "@neilhimself"
                    }
                  }
                },
                "awards": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["Hugo Award", "Nebula Award"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Author created successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "tags": ["Authors"],
        "summary": "Get author by ID",
        "description": "Retrieve a specific author with their books",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Author found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Author not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Authors"],
        "summary": "Update author by ID",
        "description": "Update an existing author's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          },
          {
            "name": "author",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bio": {
                  "type": "string",
                  "example": "Updated biography with recent achievements."
                },
                "website": {
                  "type": "string",
                  "example": "https://www.updated-website.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Author updated successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Author not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Authors"],
        "summary": "Delete author by ID",
        "description": "Remove an author from the system (only if they have no books)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Author deleted successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Cannot delete author with books",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Author not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/authors/{id}/awards": {
      "post": {
        "tags": ["Authors"],
        "summary": "Add award to author",
        "description": "Add a new award to an author's list of achievements",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Author ID"
          },
          {
            "name": "award",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["award"],
              "properties": {
                "award": {
                  "type": "string",
                  "example": "Pulitzer Prize for Fiction",
                  "description": "Award name or description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Award added successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Author not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  }
}
